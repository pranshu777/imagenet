==90969== NVPROF is profiling process 90969, command: python main.py --arch alexnet -b 64 --epochs 1 --lr 0.10 /beegfs/work/courses/2019-CSCI-GA-3033-025/imagenet_pytorch_small
=> creating model 'alexnet'
==90969== Execution timeout, stopping the application...
/home/ps3588/pytorch_env/py3.6.3/lib/python3.6/site-packages/PIL/TiffImagePlugin.py:763: UserWarning: Possibly corrupt EXIF data.  Expecting to read 2555904 bytes but only got 0. Skipping tag 0
  " Skipping tag %s" % (size, len(data), tag))
==90969== Profiling application: python main.py --arch alexnet -b 64 --epochs 1 --lr 0.10 /beegfs/work/courses/2019-CSCI-GA-3033-025/imagenet_pytorch_small
==90969== Profiling result:
==90969== Metric result:
"Device","Kernel","Invocations","Metric Name","Metric Description","Min","Max","Avg"
"Tesla K80 (0)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",6,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (0)","cudnn_convolve_sgemm_sm35_ldg_nn_64x16x64x16x16",630,"flop_count_dp","Floating Point Operations(Double Precision)",1396736,6198272,6173801
"Tesla K80 (0)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",9,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (1)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",6,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (1)","cudnn_convolve_sgemm_sm35_ldg_nn_64x16x64x16x16",630,"flop_count_dp","Floating Point Operations(Double Precision)",1396736,6198272,6173801
"Tesla K80 (1)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",9,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (2)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",6,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (2)","cudnn_convolve_sgemm_sm35_ldg_nn_64x16x64x16x16",630,"flop_count_dp","Floating Point Operations(Double Precision)",1396736,6198272,6173801
"Tesla K80 (2)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",9,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (3)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",6,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
"Tesla K80 (3)","cudnn_convolve_sgemm_sm35_ldg_nn_64x16x64x16x16",630,"flop_count_dp","Floating Point Operations(Double Precision)",1396736,6198272,6173801
"Tesla K80 (3)","void cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>(int, int, int, float const *, int, float*, cudnn::detail::implicit_convolve_sgemm<float, float, int=128, int=6, int=7, int=3, int=3, int=5, int=1, bool=1, bool=0, bool=1>*, kernel_conv_params, int, float, float, int, float, float, int, int)",9,"flop_count_dp","Floating Point Operations(Double Precision)",0,0,0
